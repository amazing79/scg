<?php

namespace Tests\Application\Categorias;

use App\Application\Categorias\CreateCategoriaCommandHandler;
use App\Application\Categorias\DeleteCategoriaByIdCommandHandler;
use App\Domain\Common\Conts\HttpStatusCode;
use App\Infrastructure\Categorias\InMemoryCategoriasRepository;
use PHPUnit\Framework\TestCase;

class DeleteCategoriaByIdCommandHandlerTest extends TestCase
{

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->repository = new InMemoryCategoriasRepository();
    }

    public function testHandle()
    {
        $values = [];
        $values['descripcion'] = 'Categoria 1';
        $add = new CreateCategoriaCommandHandler($this->repository);
        $response = $add->handle($values);
        $id =  $response['data'];
        $this->assertCount(1, $this->repository->getAll());
        $delete = new DeleteCategoriaByIdCommandHandler($this->repository);
        $result = $delete->handle($id);
        $this->assertEquals(HttpStatusCode::OK, $result['code'], $result['message']);
        $categoria = $this->repository->findById($id);
        $this->assertNull($categoria);
        $this->assertCount(0, $this->repository->getAll());
    }

    public function testMustFailWhenCategoriaDoesNotExist()
    {
        $values = [];
        $values['descripcion'] = 'Categoria 1';
        $add = new CreateCategoriaCommandHandler($this->repository);
        $response = $add->handle($values);
        $id =  $response['data'];
        $delete = new DeleteCategoriaByIdCommandHandler($this->repository);
        $result = $delete->handle(0);
        $this->assertEquals(HttpStatusCode::NOT_FOUND, $result['code'], $result['message']);
        $categoria = $this->repository->findById($id);
        $this->assertNotNull($categoria);
        $this->assertCount(1, $this->repository->getAll());
    }

}
